<div>
    <div id="checkout-contents"></div>
    <div class="card card-small page-section box-shadow" id="order-now" style="display: none">Order: ...</div>
    <div class="card card-small page-section box-shadow" id="total-amount" style="display: none">Total: ...</div>
</div>

<script>
    let contents = document.getElementById("checkout-contents");
    let totalAmount = document.getElementById("total-amount");

    let contentsURL = window.location.origin + "/api/v1/cart/get/items"

    let total = 0;

    if (!token) {
        contents.className = "logout box-shadow page-section"
        contents.innerHTML = `
                <h4>You must be logged in to access your cart.</h4>
                `
    } else {
        let loadingCard = document.getElementById("loading-card");
        resetCards();

        fetch(contentsURL, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                token: token
            })
        })
            .then(response => response.json())
            .then(data => {
                if (!data.items.length) {
                    contents.innerHTML = `
                            <div class="logout box-shadow page-section">
                            <h4>Your cart is empty</h4>
                            </div>
                        `
                } else {
                    data.items.forEach(i => {
                            // GET i.item details
                            let item = i.item;

                            if (item.error) {
                                contents.innerHTML += `
                                <div class="card box-shadow page-section">
                                <div class="card-body">
                                <h5 class="card-title"><b>ERROR: </b>${item.error}</h5>
                                <a class="card-text"><b>Information: </b>${i.id}<br/></a>
                                <a class="card-text"><b>Quantity: </b>${i.quantity}<br/></a>
                                </div>
                                </div>`;
                                return;
                            }


                            const {brand, category, cost, description, title, _id} = item;

                            // Get i.quantity
                            let quantity = Number(i.quantity);

                            total += (cost * quantity)


                            contents.innerHTML += `
                            <div class="card box-shadow page-section">
                            <div class="card-body">
                            <h5 class="card-title">${title}</h5>
                            <a class="card-text"><b>Quantity:</b>${quantity}<br/></a>
                            <a class="card-text"><b>Cost per item: </b>$${cost.toFixed(2)}<br/></a>
                            <a class="card-text"><b>Category: </b>${category}<br/></a>
                            <a class="card-text"><b>Brand: </b>${brand}<br/></a>
                            <a class="card-text"><b>Description: </b>${description}<br/></a>
                            <a class="btn btn-primary" onclick="window.location.href = '/shop/items/${_id}'"><span>Go to item page</span></a>
                            <a class="btn btn-warning" onclick="removeItem('${_id}', '${title}', '${quantity}')"><span>Remove item</span></a>
                            </div>
                            </div>`;

                            totalAmount.innerHTML = `
                            <div>
                            <a>Total: $${total.toFixed(2)}<br/></a>
                            <a class="btn btn-success" onclick="placeOrder(${total})">Place order</a>
                            <a class="btn btn-danger" onclick="clearCart()">Clear cart</a>
                            </div>
                            `;
                            totalAmount.style.display = "";
                        }
                    )
                }
                loadingCard.style.display = "none";
            })
    }

    function removeItem(id, title, quantity) {
        let answer = window.confirm(`Are you sure you want to remove all ${quantity} of ${title}: ${id}`);
        if (answer) {
            resetCards();
            let removeUrl = window.location.origin + "/api/v1/cart/remove"

            fetch(removeUrl, {
                method: 'DELETE',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    token: token,
                    itemId: id
                })
            })
                .then(() => {
                    window.location.reload();
                });
        }
    }


    function clearCart() {
        let answer = window.confirm("Are you sure you want to clear your entire cart?");
        if (answer) {
            resetCards();
            let clearCartUrl = window.location.origin + "/api/v1/cart/clear"

            fetch(clearCartUrl, {
                method: 'DELETE',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    token: token,
                })
            })
                .then(res => res.json())
                .then(() => {
                    window.location.reload();
                    loadingCard.style.display = "none";
                })
        }
    }

    function placeOrder(total) {
        let answer = window.confirm(`Confirm Purchase for $${total.toFixed(2)}?`);
        if (answer) {
            resetCards();
            let createOrder = window.location.origin + "/api/v1/orders/create"

            fetch(createOrder, {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    token: token,
                })
            })
                .then(res => res.json())
                .then(() => {
                    window.location.reload();
                    loadingCard.style.display = "none";
                })
        }
    }
</script>
