<div>
    <div class="box-shadow card page-section" id="item-content"></div>
</div>

<script>
    resetCards();
    let urlContents = window.location.href.split("/");
    let itemId = urlContents[urlContents.length - 1];

    let contents = document.getElementById("item-content");
    let url = window.location.origin + "/api/v1/shop/items/" + itemId;

    fetch(url, {
        method: 'GET',
        headers: {'Content-Type': 'application/json'},
    })
        .then(data => data.json())
        .then(item => {
            const {_id, available, brand, category, cost, description, title, createdDate, updatedDate} = item.item;
            let cDate = new Date(createdDate);
            let uDate = new Date(updatedDate);

            contents.innerHTML = "";

            // If this is not admin, then just send through the information about the item
            if (!isAdmin) {
                contents.innerHTML += `
                    <div class="card-body">
                    <h5 class="card-title">${title}</h5>
                    <a class="card-text"><b>ID: </b>${_id}<br/></a>
                    <a class="card-text"><b>Available: </b>${available}<br/></a>
                    <a class="card-text"><b>Cost per item: </b>$${cost.toFixed(2)}<br/></a>
                    <a class="card-text"><b>Category: </b>${category}<br/></a>
                    <a class="card-text"><b>Brand: </b>${brand}<br/></a>
                    <a class="card-text"><b>Description: </b>${description}<br/></a>
                    <a class="card-text"><b>Created: </b>${cDate}<br/></a>
                    <a class="card-text"><b>Updated: </b>${uDate}<br/></a>
                    </div>

                    <div class="card box-shadow page-section">
                    <div>
                    <label>Quantity: </label>
                    <input  class="quantity" value="1" id="quantity-amount" min="1" type="number"/>
                    <a class="btn btn-primary mr-auto inline-right" onclick="addToCart('${_id}', '${title}')">Add to cart</a>
                    </div>
                    </div>`;
            }
            // IF THIS IS AN ADMIN: Then allow all details (but ID) to be altered.
            else {
                contents.innerHTML += `
                    <div class="card-body">
                    <input class="form-control form-control-lg" id="update-title" value="${title}"/>

                    <div class="form-group">
                    <label><b>ID:</b></label>
                    <input class="form-control form-control-sm" id="update-id" value="${_id}" disabled>
                    </div>

                    <div class="form-group">
                    <label><b>Available:</b></label>
                    <select class="form-control form-control-sm" id="update-available">
                    <option>True</option>
                    <option>False</option>
                    </select>
                    </div>

                    <div class="form-group">
                    <label><b>Cost per item:</b></label>
                    <input class="form-control form-control-sm" type="number" id="update-cost" value="${cost.toFixed(2)}"/>
                    </div>

                    <div class="form-group">
                    <label><b>Category:</b></label>
                    <input class="form-control form-control-sm" id="update-category" value="${category}"/>
                    </div>

                    <div class="form-group">
                    <label><b>Brand:</b></label>
                    <input class="form-control form-control-sm" id="update-brand" value="${brand}"/>
                    </div>

                    <div class="form-group">
                    <label><b>Description:</b></label>
                    <input class="form-control form-control-sm" id="update-description" value="${description}"/>
                    </div>

                    <div class="form-group">
                    <label><b>Created:</b></label>
                    <input class="form-control form-control-sm" id="update-created" value="${cDate}" disabled/>
                    </div>

                    <div class="form-group">
                    <label><b>Updated:</b></label>
                    <input class="form-control form-control-sm" id="update-updated" value="${uDate}" disabled/>
                    </div>

                    </div>

                    <div class="card box-shadow page-section">
                    <div>
                    <label>Quantity: </label>
                    <input  class="quantity" value="1" id="quantity-amount" min="1" type="number"/>
                    <a class="btn btn-primary mr-auto inline-right" onclick="addToCart('${_id}', '${title}')">Add to cart</a>
                    </div>
                    </div>
                    <div class="card-body">
                    <a class="btn btn-warning inline-block" onclick="adminDelete('${_id}')">Delete</a>
                    <a class="btn btn-warning inline-block" onclick="adminUpdate('${_id}')">Update</a>
                    </div>
                `;


                // alter selected option
                document.getElementById("update-available")
                    .getElementsByTagName('option')[available ? 0 : 1].selected = true;
            }
            loadingCard.style.display = "none";
        })

    /**
     * Sends a request to send this item into the users card.
     * On Success - Green Banner with message
     * On Error - Red Banner with message
     * @param id - item id
     * @param itemTitle - item title
     */
    function addToCart(id, itemTitle) {
        resetCards();

        let addUrl = window.location.origin + "/api/v1/cart/add";
        let doc = document.getElementById("quantity-amount");
        let quantity = Number(doc.value);

        // ITEM CARD
        let itemCard = document.getElementById("item-content");
        itemCard.style.display = "block";


        if (isNaN(quantity) || quantity < 1 || !id) {
            errorCard.style.display = "block";
            errorCard.innerHTML = `<b>${quantity} is not a valid amount</b>`;
            return;
        }

        fetch(addUrl, {
            method: 'PUT',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                token: token,
                itemId: id,
                quantity: quantity,
            })
        })
            .then(res => {
                loadingCard.style.display = "none";

                if (!res) {
                    errorCard.style.display = "block"
                    errorCard.innerHTML += `<b>- Unable to add item to cart</b>`;
                } else if (!token) {
                    errorCard.style.display = "block";
                    errorCard.innerHTML = `<b>You must be logged in to add to your cart</b>`;
                } else {
                    successCard.style.display = "block";
                    successCard.innerHTML = `<b>${quantity} x "${itemTitle}" successfully added to your cart</b>`;
                }
                window.scrollTo(0, 0);
            })
    }

    function adminDelete(id) {
        resetCards();

        // ITEM CARD
        let itemCard = document.getElementById("item-content");

        itemCard.style.display = "block";
        let deleteUrl = window.location.origin + "/api/v1/shop/items/remove";

        fetch(deleteUrl, {
            method: 'DELETE',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                token: token,
                id: id,
            })
        })
            .then(res => res.json())
            .then(res => {
                if (!res) {
                    errorCard.style.display = "block"
                    errorCard.innerHTML += `<b>- Unable to make delete request</b>`;
                } else if (res.errors) {
                    errorCard.style.display = "block"
                    res.errors.forEach(error => {
                        errorCard.innerHTML += `<b>- ${error}<br/></b>`;
                    })
                } else {
                    // Show success
                    successCard.style.display = "block";

                    // Hide item (it no longer exists)
                    let itemCard = document.getElementById("item-content");
                    itemCard.style.display = "none";

                    successCard.innerHTML = `<b>Item ${id} has been successfully removed</b>`;
                }
                window.scrollTo(0, 0);
                loadingCard.style.display = "none";
            })
    }

    function adminUpdate(id) {
        resetCards();

        let updateUrl = window.location.origin + "/api/v1/shop/items/update";

        // Get all the new values
        let title = document.getElementById("update-title").value;
        let available = document.getElementById("update-available").value === "True";
        let cost = Number(document.getElementById("update-cost").value);
        let category = document.getElementById("update-category").value;
        let brand = document.getElementById("update-brand").value;
        let description = document.getElementById("update-description").value;


        fetch(updateUrl, {
            method: 'PATCH',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                token: token,
                id: id,
                title: title,
                available: available,
                cost: cost,
                category: category,
                brand: brand,
                description: description,
            })
        })
            .then(res => res.json())
            .then(res => {
                if (!res) {
                    errorCard.style.display = "block"
                    errorCard.innerHTML += `<b>- Unable to make update request</b>`;
                } else if (res.errors) {

                    // Show errors
                    errorCard.style.display = "block"
                    res.errors.forEach(error => {
                        errorCard.innerHTML += `<b>- ${error}<br/></b>`;
                    })
                } else {
                    // Show success
                    successCard.style.display = "block";
                    successCard.innerHTML = `<b>Item ${id} has been successfully updated</b>`;
                }
                window.scrollTo(0, 0);
                loadingCard.style.display = "none";
            })
    }
</script>
